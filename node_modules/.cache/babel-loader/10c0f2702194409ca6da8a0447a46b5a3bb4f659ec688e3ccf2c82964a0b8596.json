{"ast":null,"code":"var _jsxFileName = \"/Users/mirpupsik/Desktop/react/react-lab2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, ListGroup, Card, FormControl, InputGroup, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanetsApp = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\n  const [planetDetails, setPlanetDetails] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await fetch('https://api.le-systeme-solaire.net/rest.php/bodies');\n        const data = await response.json();\n        const planets = data.bodies.filter(body => body.isPlanet);\n        setPlanets(planets);\n        setFilteredPlanets(planets);\n      } catch (error) {\n        console.error('Ошибка при получении данных о планетах:', error);\n      }\n    };\n    fetchPlanets();\n  }, []);\n  useEffect(() => {\n    const fetchPlanetDetails = async () => {\n      if (selectedPlanet) {\n        try {\n          const response = await fetch(`https://api.le-systeme-solaire.net/rest.php/bodies/${selectedPlanet.id}`);\n          const data = await response.json();\n          setPlanetDetails(data);\n        } catch (error) {\n          console.error('Ошибка при получении деталей планеты:', error);\n        }\n      } else {\n        setPlanetDetails(null);\n      }\n    };\n    fetchPlanetDetails();\n  }, [selectedPlanet]);\n  const handlePlanetClick = planet => {\n    setSelectedPlanet(planet);\n  };\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleSearch = () => {\n    const filtered = planets.filter(planet => planet.englishName.toLowerCase().includes(searchQuery.toLowerCase()));\n    setFilteredPlanets(filtered);\n  };\n  const handleReset = () => {\n    setSearchQuery('');\n    setFilteredPlanets(planets);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043B\\u0430\\u043D\\u0435\\u0442\\u044B\",\n            value: searchQuery,\n            onChange: handleSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSearch,\n            children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleReset,\n            children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: filteredPlanets.map(planet => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            onClick: () => handlePlanetClick(planet),\n            active: selectedPlanet === planet,\n            children: planet.englishName\n          }, planet.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: planetDetails && /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: planetDetails.englishName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041C\\u0430\\u0441\\u0441\\u0430: \", planetDetails.mass.massValue * 10 ** planetDetails.mass.massExponent, \" \\u043A\\u0433\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041E\\u0431\\u044A\\u0435\\u043C: \", planetDetails.vol.volValue * 10 ** planetDetails.vol.volExponent, \" \\u043A\\u043C\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041F\\u043B\\u043E\\u0442\\u043D\\u043E\\u0441\\u0442\\u044C: \", planetDetails.density, \" \\u0433/\\u0441\\u043C\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0413\\u0440\\u0430\\u0432\\u0438\\u0442\\u0430\\u0446\\u0438\\u044F: \", planetDetails.gravity, \" \\u043C/\\u0441\\xB2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441: \", planetDetails.meanRadius, \" \\u043A\\u043C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanetsApp, \"VfbAF+5qvCfusD9CmCb33dbAU9Q=\");\n_c = PlanetsApp;\nexport default PlanetsApp;\nvar _c;\n$RefreshReg$(_c, \"PlanetsApp\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","ListGroup","Card","FormControl","InputGroup","Button","jsxDEV","_jsxDEV","PlanetsApp","_s","planets","setPlanets","selectedPlanet","setSelectedPlanet","planetDetails","setPlanetDetails","searchQuery","setSearchQuery","filteredPlanets","setFilteredPlanets","fetchPlanets","response","fetch","data","json","bodies","filter","body","isPlanet","error","console","fetchPlanetDetails","id","handlePlanetClick","planet","handleSearchChange","event","target","value","handleSearch","filtered","englishName","toLowerCase","includes","handleReset","children","className","md","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","map","Item","active","Header","Title","Body","mass","massValue","massExponent","vol","volValue","volExponent","density","gravity","meanRadius","_c","$RefreshReg$"],"sources":["/Users/mirpupsik/Desktop/react/react-lab2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, ListGroup, Card, FormControl, InputGroup, Button } from 'react-bootstrap';\n\nconst PlanetsApp = () => {\n  const [planets, setPlanets] = useState([]);\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\n  const [planetDetails, setPlanetDetails] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\n\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await fetch('https://api.le-systeme-solaire.net/rest.php/bodies');\n        const data = await response.json();\n        const planets = data.bodies.filter(body => body.isPlanet);\n        setPlanets(planets);\n        setFilteredPlanets(planets);\n      } catch (error) {\n        console.error('Ошибка при получении данных о планетах:', error);\n      }\n    };\n\n    fetchPlanets();\n  }, []);\n\n  useEffect(() => {\n    const fetchPlanetDetails = async () => {\n      if (selectedPlanet) {\n        try {\n          const response = await fetch(`https://api.le-systeme-solaire.net/rest.php/bodies/${selectedPlanet.id}`);\n          const data = await response.json();\n          setPlanetDetails(data);\n        } catch (error) {\n          console.error('Ошибка при получении деталей планеты:', error);\n        }\n      } else {\n        setPlanetDetails(null);\n      }\n    };\n\n    fetchPlanetDetails();\n  }, [selectedPlanet]);\n\n  const handlePlanetClick = (planet) => {\n    setSelectedPlanet(planet);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSearch = () => {\n    const filtered = planets.filter(planet =>\n      planet.englishName.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setFilteredPlanets(filtered);\n  };\n\n  const handleReset = () => {\n    setSearchQuery('');\n    setFilteredPlanets(planets);\n  };\n\n  return (\n    <Container>\n      <Row className=\"my-4\">\n        <Col md={4}>\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              placeholder=\"Введите название планеты\"\n              value={searchQuery}\n              onChange={handleSearchChange}\n            />\n            <Button variant=\"primary\" onClick={handleSearch}>Поиск</Button>\n            <Button variant=\"secondary\" onClick={handleReset}>Сброс</Button>\n          </InputGroup>\n          <ListGroup>\n            {filteredPlanets.map(planet => (\n              <ListGroup.Item\n                key={planet.id}\n                onClick={() => handlePlanetClick(planet)}\n                active={selectedPlanet === planet}\n              >\n                {planet.englishName}\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Col>\n        <Col md={8}>\n          {planetDetails && (\n            <Card>\n              <Card.Header>\n                <Card.Title>{planetDetails.englishName}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <p>Масса: {planetDetails.mass.massValue * 10 ** planetDetails.mass.massExponent} кг</p>\n                <p>Объем: {planetDetails.vol.volValue * 10 ** planetDetails.vol.volExponent} км³</p>\n                <p>Плотность: {planetDetails.density} г/см³</p>\n                <p>Гравитация: {planetDetails.gravity} м/с²</p>\n                <p>Средний радиус: {planetDetails.meanRadius} км</p>\n                {/* Добавьте другие свойства планеты по желанию */}\n              </Card.Body>\n            </Card>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PlanetsApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}