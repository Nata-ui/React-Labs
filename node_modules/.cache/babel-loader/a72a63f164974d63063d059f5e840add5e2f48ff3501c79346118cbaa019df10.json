{"ast":null,"code":"var _jsxFileName = \"/Users/mirpupsik/Desktop/react/react-lab2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, ListGroup, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanetsApp = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await fetch('https://api.le-systeme-solaire.net/rest.php/bodies');\n        const data = await response.json();\n        setPlanets(data.bodies.filter(body => body.isPlanet));\n      } catch (error) {\n        console.error('Ошибка при получении данных о планетах:', error);\n      }\n    };\n    fetchPlanets();\n  }, []);\n  const handlePlanetClick = planet => {\n    setSelectedPlanet(planet);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: planets.map(planet => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            onClick: () => handlePlanetClick(planet),\n            active: selectedPlanet === planet,\n            children: planet.englishName\n          }, planet.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: selectedPlanet && /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: selectedPlanet.englishName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: selectedPlanet.moons && selectedPlanet.moons.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"\\u0421\\u043F\\u0443\\u0442\\u043D\\u0438\\u043A\\u0438:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: selectedPlanet.moons.map(moon => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: moon.moon\n                }, moon.moon, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u0423 \\u044D\\u0442\\u043E\\u0439 \\u043F\\u043B\\u0430\\u043D\\u0435\\u0442\\u044B \\u043D\\u0435\\u0442 \\u0441\\u043F\\u0443\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanetsApp, \"3sb7cfP2pelHJMcgufDv3rn3XPY=\");\n_c = PlanetsApp;\nexport default PlanetsApp;\nvar _c;\n$RefreshReg$(_c, \"PlanetsApp\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","ListGroup","Card","jsxDEV","_jsxDEV","PlanetsApp","_s","planets","setPlanets","selectedPlanet","setSelectedPlanet","fetchPlanets","response","fetch","data","json","bodies","filter","body","isPlanet","error","console","handlePlanetClick","planet","children","className","md","map","Item","onClick","active","englishName","id","fileName","_jsxFileName","lineNumber","columnNumber","Header","Title","Body","moons","length","moon","_c","$RefreshReg$"],"sources":["/Users/mirpupsik/Desktop/react/react-lab2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, ListGroup, Card } from 'react-bootstrap';\n\nconst PlanetsApp = () => {\n  const [planets, setPlanets] = useState([]);\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\n\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await fetch('https://api.le-systeme-solaire.net/rest.php/bodies');\n        const data = await response.json();\n        setPlanets(data.bodies.filter(body => body.isPlanet));\n      } catch (error) {\n        console.error('Ошибка при получении данных о планетах:', error);\n      }\n    };\n\n    fetchPlanets();\n  }, []);\n\n  const handlePlanetClick = (planet) => {\n    setSelectedPlanet(planet);\n  };\n\n  return (\n    <Container>\n      <Row className=\"my-4\">\n        <Col md={4}>\n          <ListGroup>\n            {planets.map(planet => (\n              <ListGroup.Item\n                key={planet.id}\n                onClick={() => handlePlanetClick(planet)}\n                active={selectedPlanet === planet}\n              >\n                {planet.englishName}\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Col>\n        <Col md={8}>\n          {selectedPlanet && (\n            <Card>\n              <Card.Header>\n                <Card.Title>{selectedPlanet.englishName}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                {selectedPlanet.moons && selectedPlanet.moons.length > 0 ? (\n                  <div>\n                    <h5>Спутники:</h5>\n                    <ListGroup>\n                      {selectedPlanet.moons.map(moon => (\n                        <ListGroup.Item key={moon.moon}>{moon.moon}</ListGroup.Item>\n                      ))}\n                    </ListGroup>\n                  </div>\n                ) : (\n                  <p>У этой планеты нет спутников.</p>\n                )}\n              </Card.Body>\n            </Card>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PlanetsApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}