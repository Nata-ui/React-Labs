{"ast":null,"code":"var _jsxFileName = \"/Users/mirpupsik/Desktop/react/react-lab2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanetsApp = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await fetch('https://api.le-systeme-solaire.net/rest.php/bodies');\n        const data = await response.json();\n        setPlanets(data.bodies.filter(body => body.isPlanet));\n      } catch (error) {\n        console.error('Error fetching planets:', error);\n      }\n    };\n    fetchPlanets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u043B\\u0430\\u043D\\u0435\\u0442\\u044B \\u0438 \\u0438\\u0445 \\u0441\\u043F\\u0443\\u0442\\u043D\\u0438\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), planets.map(planet => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: planet.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), planet.moons && planet.moons.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: planet.moons.map(moon => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: moon.moon\n        }, moon.moon, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0423 \\u044D\\u0442\\u043E\\u0439 \\u043F\\u043B\\u0430\\u043D\\u0435\\u0442\\u044B \\u043D\\u0435\\u0442 \\u0441\\u043F\\u0443\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, planet.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanetsApp, \"von7Z1r3F3hAxnvSjQX44zZhN8s=\");\n_c = PlanetsApp;\nexport default PlanetsApp;\nvar _c;\n$RefreshReg$(_c, \"PlanetsApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PlanetsApp","_s","planets","setPlanets","fetchPlanets","response","fetch","data","json","bodies","filter","body","isPlanet","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","planet","name","moons","length","moon","id","_c","$RefreshReg$"],"sources":["/Users/mirpupsik/Desktop/react/react-lab2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst PlanetsApp = () => {\n  const [planets, setPlanets] = useState([]);\n\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await fetch('https://api.le-systeme-solaire.net/rest.php/bodies');\n        const data = await response.json();\n        setPlanets(data.bodies.filter(body => body.isPlanet));\n      } catch (error) {\n        console.error('Error fetching planets:', error);\n      }\n    };\n\n    fetchPlanets();\n  }, []);\n\n  return (\n    <div>\n      <h1>Планеты и их спутники</h1>\n      {planets.map(planet => (\n        <div key={planet.id}>\n          <h2>{planet.name}</h2>\n          {planet.moons && planet.moons.length > 0 ? (\n            <ul>\n              {planet.moons.map(moon => (\n                <li key={moon.moon}>{moon.moon}</li>\n              ))}\n            </ul>\n          ) : (\n            <p>У этой планеты нет спутников.</p>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PlanetsApp;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAoD,CAAC;QAClF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,UAAU,CAACI,IAAI,CAACE,MAAM,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC,CAAC;MACvD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDT,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BjB,OAAO,CAACkB,GAAG,CAACC,MAAM,iBACjBtB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAKM,MAAM,CAACC;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACrBE,MAAM,CAACE,KAAK,IAAIF,MAAM,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,gBACtCzB,OAAA;QAAAgB,QAAA,EACGM,MAAM,CAACE,KAAK,CAACH,GAAG,CAACK,IAAI,iBACpB1B,OAAA;UAAAgB,QAAA,EAAqBU,IAAI,CAACA;QAAI,GAArBA,IAAI,CAACA,IAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CACpC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,gBAELpB,OAAA;QAAAgB,QAAA,EAAG;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACpC;IAAA,GAVOE,MAAM,CAACK,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWd,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CApCID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}