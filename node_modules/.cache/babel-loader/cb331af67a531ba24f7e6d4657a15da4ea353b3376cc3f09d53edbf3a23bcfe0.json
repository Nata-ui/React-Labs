{"ast":null,"code":"var _jsxFileName = \"/Users/mirpupsik/Desktop/react/react-lab2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanetsAndMoons = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('https://api.le-systeme-solaire.net/rest/bodies?data=id,englishName,isPlanet,moons').then(response => response.json()).then(data => {\n      const bodies = data.bodies;\n      const planets = bodies.filter(body => body.isPlanet);\n      setPlanets(planets);\n    }).catch(error => {\n      setError(error.message);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Planets and Moons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), planets.map(planet => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planet\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: planet.englishName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), planet.moons ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"moons\",\n        children: planet.moons.map(moon => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: moon.moon.englishName\n        }, moon.moon.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-moons\",\n        children: \"No moons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, planet.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanetsAndMoons, \"Rl1NVgeUH+DR3Fv3NbO+nX1jACY=\");\n_c = PlanetsAndMoons;\nexport default PlanetsAndMoons;\nvar _c;\n$RefreshReg$(_c, \"PlanetsAndMoons\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PlanetsAndMoons","_s","planets","setPlanets","error","setError","fetch","then","response","json","data","bodies","filter","body","isPlanet","catch","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","planet","englishName","moons","moon","id","_c","$RefreshReg$"],"sources":["/Users/mirpupsik/Desktop/react/react-lab2/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst PlanetsAndMoons = () => {\n  const [planets, setPlanets] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch('https://api.le-systeme-solaire.net/rest/bodies?data=id,englishName,isPlanet,moons')\n      .then(response => response.json())\n      .then(data => {\n        const bodies = data.bodies;\n        const planets = bodies.filter(body => body.isPlanet);\n        setPlanets(planets);\n      })\n      .catch(error => {\n        setError(error.message);\n      });\n  }, []);\n\n  if (error) {\n    return <div className=\"error\">Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Planets and Moons</h1>\n      {planets.map(planet => (\n        <div key={planet.id} className=\"planet\">\n          <h2>{planet.englishName}</h2>\n          {planet.moons ? (\n            <ul className=\"moons\">\n              {planet.moons.map(moon => (\n                <li key={moon.moon.id}>{moon.moon.englishName}</li>\n              ))}\n            </ul>\n          ) : (\n            <p className=\"no-moons\">No moons</p>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PlanetsAndMoons;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,mFAAmF,CAAC,CACvFC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,MAAM,GAAGD,IAAI,CAACC,MAAM;MAC1B,MAAMT,OAAO,GAAGS,MAAM,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;MACpDX,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC,CACDa,KAAK,CAACX,KAAK,IAAI;MACdC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIZ,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAKkB,SAAS,EAAC,OAAO;MAAAC,QAAA,GAAC,SAAO,EAACd,KAAK;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpD;EAEA,oBACEvB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBpB,OAAO,CAACqB,GAAG,CAACC,MAAM,iBACjBzB,OAAA;MAAqBkB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrCnB,OAAA;QAAAmB,QAAA,EAAKM,MAAM,CAACC;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC5BE,MAAM,CAACE,KAAK,gBACX3B,OAAA;QAAIkB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAClBM,MAAM,CAACE,KAAK,CAACH,GAAG,CAACI,IAAI,iBACpB5B,OAAA;UAAAmB,QAAA,EAAwBS,IAAI,CAACA,IAAI,CAACF;QAAW,GAApCE,IAAI,CAACA,IAAI,CAACC,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CACnD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,gBAELvB,OAAA;QAAGkB,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACpC;IAAA,GAVOE,MAAM,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWd,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CAxCID,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AA0CrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}