{"ast":null,"code":"var _jsxFileName = \"/Users/mirpupsik/Desktop/react/react-lab2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, ListGroup, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanetsApp = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\n  const [planetDetails, setPlanetDetails] = useState(null);\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await fetch('https://api.le-systeme-solaire.net/rest.php/bodies');\n        const data = await response.json();\n        setPlanets(data.bodies.filter(body => body.isPlanet));\n      } catch (error) {\n        console.error('Ошибка при получении данных о планетах:', error);\n      }\n    };\n    fetchPlanets();\n  }, []);\n  useEffect(() => {\n    const fetchPlanetDetails = async () => {\n      if (selectedPlanet) {\n        try {\n          const response = await fetch(`https://api.le-systeme-solaire.net/rest.php/bodies/${selectedPlanet.id}`);\n          const data = await response.json();\n          setPlanetDetails(data);\n        } catch (error) {\n          console.error('Ошибка при получении деталей планеты:', error);\n        }\n      } else {\n        setPlanetDetails(null);\n      }\n    };\n    fetchPlanetDetails();\n  }, [selectedPlanet]);\n  const handlePlanetClick = planet => {\n    setSelectedPlanet(planet);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: planets.map(planet => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            onClick: () => handlePlanetClick(planet),\n            active: selectedPlanet === planet,\n            children: planet.englishName\n          }, planet.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: planetDetails && /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: planetDetails.englishName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041C\\u0430\\u0441\\u0441\\u0430: \", planetDetails.mass.massValue * 10 ** planetDetails.mass.massExponent, \" \\u043A\\u0433\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041E\\u0431\\u044A\\u0435\\u043C: \", planetDetails.vol.volValue * 10 ** planetDetails.vol.volExponent, \" \\u043A\\u043C\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041F\\u043B\\u043E\\u0442\\u043D\\u043E\\u0441\\u0442\\u044C: \", planetDetails.density, \" \\u0433/\\u0441\\u043C\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0413\\u0440\\u0430\\u0432\\u0438\\u0442\\u0430\\u0446\\u0438\\u044F: \", planetDetails.gravity, \" \\u043C/\\u0441\\xB2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439 \\u0440\\u0430\\u0434\\u0438\\u0443\\u0441: \", planetDetails.meanRadius, \" \\u043A\\u043C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanetsApp, \"6G/JTT4jtN9Fskl7UZ+U7jGy3YU=\");\n_c = PlanetsApp;\nexport default PlanetsApp;\nvar _c;\n$RefreshReg$(_c, \"PlanetsApp\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","ListGroup","Card","jsxDEV","_jsxDEV","PlanetsApp","_s","planets","setPlanets","selectedPlanet","setSelectedPlanet","planetDetails","setPlanetDetails","fetchPlanets","response","fetch","data","json","bodies","filter","body","isPlanet","error","console","fetchPlanetDetails","id","handlePlanetClick","planet","children","className","md","map","Item","onClick","active","englishName","fileName","_jsxFileName","lineNumber","columnNumber","Header","Title","Body","mass","massValue","massExponent","vol","volValue","volExponent","density","gravity","meanRadius","_c","$RefreshReg$"],"sources":["/Users/mirpupsik/Desktop/react/react-lab2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, ListGroup, Card } from 'react-bootstrap';\n\nconst PlanetsApp = () => {\n  const [planets, setPlanets] = useState([]);\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\n  const [planetDetails, setPlanetDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      try {\n        const response = await fetch('https://api.le-systeme-solaire.net/rest.php/bodies');\n        const data = await response.json();\n        setPlanets(data.bodies.filter(body => body.isPlanet));\n      } catch (error) {\n        console.error('Ошибка при получении данных о планетах:', error);\n      }\n    };\n\n    fetchPlanets();\n  }, []);\n\n  useEffect(() => {\n    const fetchPlanetDetails = async () => {\n      if (selectedPlanet) {\n        try {\n          const response = await fetch(`https://api.le-systeme-solaire.net/rest.php/bodies/${selectedPlanet.id}`);\n          const data = await response.json();\n          setPlanetDetails(data);\n        } catch (error) {\n          console.error('Ошибка при получении деталей планеты:', error);\n        }\n      } else {\n        setPlanetDetails(null);\n      }\n    };\n\n    fetchPlanetDetails();\n  }, [selectedPlanet]);\n\n  const handlePlanetClick = (planet) => {\n    setSelectedPlanet(planet);\n  };\n\n  return (\n    <Container>\n      <Row className=\"my-4\">\n        <Col md={4}>\n          <ListGroup>\n            {planets.map(planet => (\n              <ListGroup.Item\n                key={planet.id}\n                onClick={() => handlePlanetClick(planet)}\n                active={selectedPlanet === planet}\n              >\n                {planet.englishName}\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Col>\n        <Col md={8}>\n          {planetDetails && (\n            <Card>\n              <Card.Header>\n                <Card.Title>{planetDetails.englishName}</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <p>Масса: {planetDetails.mass.massValue * 10 ** planetDetails.mass.massExponent} кг</p>\n                <p>Объем: {planetDetails.vol.volValue * 10 ** planetDetails.vol.volExponent} км³</p>\n                <p>Плотность: {planetDetails.density} г/см³</p>\n                <p>Гравитация: {planetDetails.gravity} м/с²</p>\n                <p>Средний радиус: {planetDetails.meanRadius} км</p>\n                {/* Добавьте другие свойства планеты по желанию */}\n              </Card.Body>\n            </Card>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PlanetsApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}